manifest {
  description = "combine a set of summary stat tsv files into one tabixed tsv file optionally filtering by p-value"
  nextflowVersion = ">=21.10.6"
}

profiles {
  params.resource = "eQTL_Catalogue_R6"
  // first_out_columns are params.resource and two first columns in params.metadata_loc
  params.first_out_columns = "#resource dataset data_type"
  params.split_variant_to_cpra = true
  // if params.split_variant_to_cpra is true, params.variant_col (assumed format c_p_r_a) will be split into chr pos ref alt columns automatically
  // otherwise variant_col doesn't matter
  params.variant_col = "variant"
  // columns can be a subset of the columns in each input file in any order
  params.columns = "molecular_trait_id chr pos ref alt pvalue beta se pip cs_id cs_size cs_min_r2"
  params.add_trait_from_filename = false
  // prefix_remove and suffix_remove only matter when params.add_trait_from_filename is true
  params.prefix_remove = ""
  params.suffix_remove = ""
  // if input is already -log10(p), take_log_of_p should be false
  params.take_log_of_p = true
  // out_columns follows the order of params.columns but can have different names
  // trait will be added as the first column if params.add_trait_from_filename is true
  // -log10(p) replaces p-value if params.take_log_of_p is true
  params.out_columns = "trait chr pos ref alt mlog10p beta se pip cs_id cs_size cs_min_r2"
  params.trait_col = "trait"
  // col_offset is the number of first_out_columns - needed for sorting
  params.col_offset = 3
  params.chr_col = "chr"
  params.pval_col = "pvalue"
  params.pval_thres = 1
  // indexes refer to params.out_columns and are needed for sorting
  params.trait_col_index = 1
  params.chr_col_index = 2
  params.pos_col_index = 3
  params.ref_col_index = 4
  params.alt_col_index = 5
  params.filename = "eQTL_Catalogue_R6_credible_sets.tsv.gz"
  params.batch_size = 16
  local {
    params.outdir = "."
    params.metadata_loc = "metadata/eqtl_cat_r6_credible_sets_munge_input.tsv"
    process.container = "eu.gcr.io/finngen-refinery-dev/bioinformatics:0.8"
    docker.enabled = true
  }
  gls {
    params.outdir = "gs://finngen-commons/credible_sets"
    params.metadata_loc = "gs://finngen-commons/credible_sets/eqtl_cat_r6_credible_sets_munge_input.gs.tsv"
    process.container = "eu.gcr.io/finngen-refinery-dev/bioinformatics:0.8"
    docker.enabled = true
    process {
      withName: "merge_sumstats" {
        google.lifeSciences.preemptible = false
      }
    }
  }
}
